
@{
    ViewBag.Title = "事件分析";
}

@section Style{
@Styles.Render("~/style/form")    
}
<div class="page-where saleWhere" style=" margin-top:10px;">
    <div class="btn-group timeButtonGroup">
        <button type="button" class="btn btn-default btn-select" value="7" onclick="whereTimeButtonClick(this)">最近7天</button>
        <button type="button" class="btn btn-default" value="15" onclick="whereTimeButtonClick(this)">最近15天</button>
        <button type="button" class="btn btn-default" value="30" onclick="whereTimeButtonClick(this)">最近30天</button>
        <button type="button" class="btn btn-default" value="other" onclick="whereTimeButtonClick(this)">其他时间</button>
    </div>
    <div class="btn-group page-where-othertime timeButtonGroup" style="display:none;">
        <button type="button" value="return" class="btn btn-default border-right0" onclick="whereTimeButtonClick(this)">返回</button>
        <div class="pull-left">
            <div class="input-daterange input-group">
                <input type="text" placeholder="开始时间" class="input-sm form-control" name="start" />
                <span class="input-group-addon">to</span>
                <input type="text" placeholder="结束时间" class="input-sm form-control" name="end" />
            </div>
        </div>
        <button type="button" value="select" class="btn btn-default btn-inquire" onclick="GetSaleChartJson()">查询</button>
    </div>
    <div class="pull-right">
        <div class="btn-group visitClass">
            <button type="button" class="btn btn-default btn-select" value="1" onclick="whereTimeButtonClick(this)">一级概要</button>
            <button type="button" class="btn btn-default" value="2" onclick="whereTimeButtonClick(this)">二级概要</button>
            <button type="button" class="btn btn-default" value="3" onclick="whereTimeButtonClick(this)">三级概要</button>
        </div>
    </div>
</div>
<div id="flashcontenttd" class="chartDiv">

</div>

<script src="~/Scripts/plugins/asset/echarts-all.js"></script>
<script src="~/Scripts/PlatformVisit/CaseList.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $('.saleWhere .page-where-othertime .input-daterange').datepicker({ format: 'yyyy-mm-dd' });

        $(".saleWhere .pull-right input:radio").click(function () {
            GetCaseClassAnalyze();
        });
        GetCaseClassAnalyze();
    });

    function whereTimeButtonClick(obj) {
        var value = obj.value;
        if (value == "return") {
            $(".saleWhere .btn-group.timeButtonGroup").show().filter(".page-where-othertime").hide();
        } else {
            $(obj).parent().find(".btn-select").removeClass("btn-select");
            $(obj).addClass("btn-select");
            if (value == "other") {
                $(".saleWhere .btn-group.timeButtonGroup").hide().filter(".page-where-othertime").show();
            } else {
                GetCaseClassAnalyze();
            }
        }
    }

    function GetCaseClassAnalyze() {
        var accid = $("#ShopInfo").val();
        var url = "/PlatformVisit/CaseClassAnalyze";
        var postData = {};
        postData["rank"] = $(".saleWhere .visitClass .btn.btn-select").val();

        var timeType = $(".saleWhere .timeButtonGroup .btn.btn-select").val();
        if (timeType == "other") {
            var statTime = $(".saleWhere .page-where-othertime input[name='start']").val();
            var endTime = $(".saleWhere .page-where-othertime input[name='end']").val();
            if (statTime.length > 0) {
                postData["startTime"] = statTime;
            }
            if (endTime.length > 0) {
                postData["endTime"] = endTime;
            }
        } else {
            var timeValue = $.timePeriod(0 - Number(timeType));
            postData["startTime"] = timeValue.start.toLocaleDateString();
            postData["endTime"] = timeValue.end.toLocaleDateString();
        }

        var typeValue = $(".saleWhere .radio input:checked").val();
        postData["dataType"] = typeValue;


        $.doAjax(url, postData, function (msg) {
            if (msg != "") {

                var json = jQuery.parseJSON(msg);
                var XLable = new Array();
                var tbData = {};

                var series = new Array();

                option.title.text = json.captionTitle;
                $.each(json.DataList, function (i, n) {

                    XLable.push(i);

                    $.each(n.ItemList, function (itemI, itemN) {
                        var dataItemValue = {};
                        if (n.weekend == 6 || n.weekend == 0) {
                            dataItemValue = {
                                value: itemN.Values,
                                symbol: 'emptycircle',
                                symbolSize: 2,
                                itemStyle: {
                                    normal: {
                                        color: 'red'
                                    }
                                },
                                showAllSymbol: true
                            };
                        } else {
                            dataItemValue["value"] = itemN.Values;
                        }

                        if (!tbData.hasOwnProperty(itemN.series)) {
                            tbData[itemN.series] = new Array();
                        }
                        tbData[itemN.series].push(dataItemValue);
                    });

                });
                var legend = new Array();
                $.each(tbData, function (i, n) {
                    var seriesItem = {
                        name: i + "数量",
                        type: 'line',
                        symbol: 'Circle',
                        data: n
                    }
                    series.push(seriesItem);
                    legend.push(seriesItem.name);
                })

                option.xAxis[0].data = XLable;
                option.legend.data = legend;
                option.series = series;
                myChart.clear().setOption(option);
            }
        });
    }

    var myChart = echarts.init(document.getElementById('flashcontenttd'));

    var option = {
        color:
            ['#87cefa', '#ff7f50', '#da70d6', '#32cd32', '#6495ed',
             '#ff69b4', '#ba55d3', '#cd5c5c', '#ffa500', '#40e0d0',
             '#1e90ff', '#ff6347', '#7b68ee', '#00fa9a', '#ffd700',
             '#6b8e23', '#ff00ff', '#3cb371', '#b8860b', '#30e0e0'],
        title: {
            text: '回访事件分析',
            textAlign: "center",
            x: "center"
        },
        tooltip: {
            show: true,
            trigger: 'axis'
        },
        legend: {
            data: [
                '暂无数据'
            ],
            y: "bottom"
        },
        toolbox: {
            show: true,
            feature: {
                mark: { show: true },
                dataView: { show: true, readOnly: false },
                magicType: { show: true, type: ['line', 'bar'] },
                restore: { show: true },
                saveAsImage: { show: true }
            }
        },
        dataZoom: { show: true, realtime: true, y: 36, height: 20, start: 0, end: 100 },
        calculable: false,
        grid: { y: 60, y2: 70, x2: 20 },
        xAxis: [
            {
                type: 'category',
                boundaryGap: false,
                axisLine: { show: true },//坐标轴线
                axisTick: { show: true },//坐标轴小标记
                axisLabel: { show: true },//坐标轴文本标签
                splitArea: { show: false },//分隔区域
                splitLine: { show: true },//分隔线
                data: ['0', '0', '0', '0', '0', '0', '0']
            }
        ],
        yAxis: [
            {
                type: 'value'
            }
        ],
        series: [
            {
                name: '暂无数据',
                type: 'line',
                symbol: 'Circle',
                data: [0, 0, 0, 0, 0, 0, 0]
            }
        ]
    };


    // 为echarts对象加载数据
    myChart.setOption(option);
</script>
@section Scripts{
   @Scripts.Render("~/js/begin/form") 
    
}