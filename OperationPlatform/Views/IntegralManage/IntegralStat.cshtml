@{
    ViewBag.Title = "积分统计分析";
}

@section Style{
    @Styles.Render("~/style/form")
}

<div class="page-where integralWhere" style="margin-top: 10px;">
    <div class="btn-group">
        <button type="button" class="btn btn-default btn-select" value="8" onclick=" integralWhereTimeButtonClick(this) ">7天</button>
        <button type="button" class="btn btn-default" value="16" onclick=" integralWhereTimeButtonClick(this) ">15天</button>
        <button type="button" class="btn btn-default" value="31" onclick=" integralWhereTimeButtonClick(this) ">30天</button>
        <button type="button" class="btn btn-default" value="91" onclick=" integralWhereTimeButtonClick(this) ">三个月</button>
        <button type="button" class="btn btn-default" value="other" onclick=" integralWhereTimeButtonClick(this) ">其他时间</button>
    </div>
    <div class="btn-group page-where-othertime" style="display: none;">
        <button type="button" value="return" class="btn btn-default border-right0" onclick=" integralWhereTimeButtonClick(this) ">返回</button>
        <div class="page-where-time-input">
            <div class="input-daterange input-group">
                <input type="text" placeholder="开始时间" class="input-sm form-control" name="start" />
                <span class="input-group-addon">to</span>
                <input type="text" placeholder="结束时间" class="input-sm form-control" name="end" />
            </div>
        </div>
        <button type="button" value="select" class="btn btn-default btn-inquire" onclick=" GetData() ">查询</button>
    </div>
</div>

<div class="row" style="padding-top: 10px;padding-left: 0px">
    <div class="col-md-4 col-lg-4 col-xlg-4  m-b-10">
        <div class="panel no-border widget-loader-bar">
            <div class="container-xs-height">
                <div class="row-xs-height">
                    <div class="pirChartDiv m-b-15" id="piechartExRatio">

                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-4 col-lg-4 col-xlg-4  m-b-10">
        <div class="panel no-border widget-loader-bar">
            <div class="container-xs-height">
                <div class="row-xs-height">
                    <div class="pirChartDiv m-b-15" id="piechartGoodsType">

                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-4 col-lg-4 col-xlg-4  m-b-10">
        <div class="panel no-border widget-loader-bar">
            <div class="container-xs-height">
                <div class="row-xs-height">
                    <div class="pirChartDiv m-b-15" id="piechartVisitRatio">

                    </div>
                </div>
            </div>
        </div>
    </div>

</div>

<div class="col-md-12 col-lg-12 col-xlg-12 col-sm-12 col-xs-12">
    <div class="panel no-border widget-loader-bar" id="ProgressCompare">
        <div class="container-xs-height">
            <div class="row-xs-height">
                <div id="integralFlashContenttd" class="chartDiv no-b m-t-20 m-b-20">
                </div>
            </div>
        </div>
    </div>

</div>

@section Scripts{
    @Scripts.Render("~/js/begin/form")
    <script src="~/Scripts/plugins/asset/echarts-all.js"></script>
    <script src="/Scripts/plugins/easypiechart/jquery.easypiechart.min.js"></script>

    <script type="text/javascript">
        $(document).ready(function() {
            $('.integralWhere .page-where-othertime .input-daterange').datepicker();

            GetPieJson();
            GetChartJson();
        });

        function GetData() {
            GetPieJson();
            GetChartJson();
        }

        function integralWhereTimeButtonClick(obj) {
            var value = obj.value;
            if (value == "return") {
                $(".integralWhere .btn-group").show().filter(".page-where-othertime").hide();
            } else {
                $(obj).parent().find(".btn-select").removeClass("btn-select");
                $(obj).addClass("btn-select");
                if (value == "other") {
                    $(".integralWhere .btn-group").hide().filter(".page-where-othertime").show();
                } else {
                    GetPieJson();
                    GetChartJson();
                }
            }
        }

        function GetPieJson() {
            var url = "/IntegralManage/GetIntegralPieStat";

            var postJson = {};

            var timeType = $(".integralWhere .btn-group .btn.btn-select").val();
            if (timeType == "other") {
                var statTime = $(".integralWhere .page-where-othertime input[name='start']").val();
                var endTime = $(".integralWhere .page-where-othertime input[name='end']").val();
                if (statTime.length > 0) {
                    postJson["startTime"] = statTime;
                }
                if (endTime.length > 0) {
                    postJson["endTime"] = endTime;
                }
            } else {
                var timeValue = $.timePeriod(0 - Number(timeType));
                postJson["startTime"] = timeValue.start.toLocaleDateString();
                postJson["endTime"] = timeValue.end.toLocaleDateString();
            }

            $.doAjax(url, postJson, function(msg) {
                if (msg != "") {

                    var json = $.parseJSON(msg);

                    var tbDataEx = new Array();
                    var tbLabelEx = new Array();
                    var tbDataType = new Array();
                    var tbLabelType = new Array();
                    var tbDataVisit = new Array();
                    var tbDataVisitSec = new Array();
                    var tbLabelVisit = new Array();


                    $.each(json.GoodsType, function(i, n) {
                        //console.log(n);
                        tbLabelType.push(n.Name);
                        tbDataType.push({
                            value: n.Value,
                            name: n.Name
                        });
                    });

                    optionType.legend.data = tbLabelType;
                    optionType.series[0].data = tbDataType;

                    $.each(json.ExRatio, function(i, n) {
                        tbLabelEx.push(n.Name);
                        tbDataEx.push({
                            value: n.Value,
                            name: n.Name
                        });
                    });
                    optionEx.legend.data = tbLabelEx;
                    optionEx.series[0].data = tbDataEx;


                    $.each(json.VisitRatio, function(i, n) {
                        tbLabelVisit.push(n.Name);
                        tbDataVisit.push({
                            value: n.Value,
                            name: n.Name
                        });
                    });

                    $.each(json.VisitRatioSec, function (i, n) {
                        if ($.inArray(n.Name, tbLabelVisit)==-1) {
                            tbLabelVisit.push(n.Name);
                        }
                        tbDataVisitSec.push({
                            value: n.Value,
                            name: n.Name
                        });
                    });

                    optionVisit.legend.data = tbLabelVisit;
                    optionVisit.series[0].data = tbDataVisit;
                    optionVisit.series[1].data = tbDataVisitSec

                    myChartEx.clear().setOption(optionEx);
                    myChartVisit.clear().setOption(optionVisit);
                    myChartType.clear().setOption(optionType);
                }
            }, true);
        }

        function GetChartJson() {
            var url = "/IntegralManage/GetIntegralStatChart";

            var postJson = {};

            var timeType = $(".integralWhere .btn-group .btn.btn-select").val();
            if (timeType == "other") {
                var statTime = $(".integralWhere .page-where-othertime input[name='start']").val();
                var endTime = $(".integralWhere .page-where-othertime input[name='end']").val();
                if (statTime.length > 0) {
                    postJson["startTime"] = statTime;
                }
                if (endTime.length > 0) {
                    postJson["endTime"] = endTime;
                }
            } else {
                var timeValue = $.timePeriod(0 - Number(timeType));
                postJson["startTime"] = timeValue.start.toLocaleDateString();
                postJson["endTime"] = timeValue.end.toLocaleDateString();
            }

            $.doAjax(url, postJson, function(msg) {

                if (msg != "") {

                    var json = jQuery.parseJSON(msg);
                    var XLable = new Array();
                    var tbData = {};

                    var series = new Array();

                    option.title.text = json.captionTitle;
                    $.each(json.DataList, function(i, n) {

                        XLable.push(i);

                        $.each(n.ItemList, function(itemI, itemN) {

                            var dataItemValue = {};
                            if (n.weekend == 6 || n.weekend == 0) {
                                dataItemValue = {
                                    value: Number(itemN.Values),
                                    symbol: 'emptycircle',
                                    smooth: true,
                                    symbolSize: 2,
                                    itemStyle: {
                                        normal: {
                                            color: 'red'
                                        }
                                    },
                                    showAllSymbol: true
                                };
                            } else {
                                dataItemValue["value"] = Number(itemN.Values);
                            }

                            if (!tbData.hasOwnProperty(itemN.series)) {
                                tbData[itemN.series] = new Array();
                            }
                            tbData[itemN.series].push(dataItemValue);


                        });

                    });
                    var legend = new Array();
                    $.each(tbData, function(i, n) {
                        var seriesItem = {
                            name: i + "数量",
                            type: 'line',
                            symbol: 'Circle',
                            smooth: true,
                            data: n,
                            markLine: { data: [{ type: "average", name: "平均值" }] }
                        }
                        series.push(seriesItem);
                        legend.push(seriesItem.name);
                    });

                    option.xAxis[0].data = XLable;
                    option.legend.data = legend;
                    option.series = series;
                    myChart.clear().setOption(option);
                } else {
                    alert("可能这段时间没有数据！");
                }

            }, true);

        }

        var myChart = echarts.init(document.getElementById('integralFlashContenttd'));

        var option = {
            color:
            [
                '#87cefa', '#ff7f50', '#da70d6', '#32cd32', '#6495ed',
                '#ff69b4', '#ba55d3', '#cd5c5c', '#ffa500', '#40e0d0',
                '#1e90ff', '#ff6347', '#7b68ee', '#00fa9a', '#ffd700',
                '#6b8e23', '#ff00ff', '#3cb371', '#b8860b', '#30e0e0'
            ],
            title: {
                text: '积分兑换统计',
                textAlign: "center",
                x: "center"
            },
            tooltip: {
                show: true,
                trigger: 'axis'
            },
            legend: {
                data: [
                    '暂无数据'
                ],
                y: "bottom"
            },
            toolbox: {
                show: true,
                feature: {
                    mark: { show: true },
                    dataView: { show: true, readOnly: false },
                    magicType: { show: true, type: ['line', 'bar'] },
                    restore: { show: true },
                    saveAsImage: { show: true }
                }
            },
            dataZoom: { show: true, realtime: true, y: 36, height: 20, start: 0, end: 100 },
            calculable: false,
            grid: { y: 30, y2: 70, x: 50, x2: 40 },
            xAxis: [
                {
                    type: 'category',
                    boundaryGap: false,
                    axisLine: { show: true }, //坐标轴线
                    axisTick: { show: true }, //坐标轴小标记
                    axisLabel: { show: true }, //坐标轴文本标签
                    splitArea: { show: false }, //分隔区域
                    splitLine: { show: true }, //分隔线
                    data: ['0', '0', '0', '0', '0', '0', '0']
                }
            ],
            yAxis: [
                {
                    type: 'value'
                }
            ],
            series: [
                {
                    name: '暂无数据',
                    type: 'line',
                    symbol: 'Circle',
                    data: [0, 0, 0, 0, 0, 0, 0]
                }
            ]
        };


        // 为echarts对象加载数据
        myChart.setOption(option);
    </script>

    <script type="text/javascript">
        var myChartEx = echarts.init(document.getElementById('piechartExRatio'));

        var optionEx = {
            title: {
                text: '兑换商品种类比',
                x: 'center'
            },
            tooltip: {
                trigger: 'item',
                formatter: "{a} <br/>{b} : {c} ({d}%)"
            },
            legend: {
                show: false,
                orient: 'vertical',
                x: 'left',
                data: ['个数']
            },
            toolbox: {
                show: false,
                feature: {
                    mark: { show: true },
                    dataView: { show: true, readOnly: false },
                    magicType: {
                        show: true,
                        type: ['pie', 'funnel'],
                        optionChannel: {
                            funnel: {
                                x: '25%',
                                width: '50%',
                                funnelAlign: 'left'
                            }
                        }
                    },
                    restore: { show: true },
                    saveAsImage: { show: true }
                }
            },
            calculable: true,
            series: [
                {
                    name: '兑换商品种类比',
                    type: 'pie',
                    radius: '55%',
                    center: ['50%', '60%'],
                    
                    data: [
                        { value: 0, name: '渠道' }
                    ]
                }
            ]
        };


        myChartEx.setOption(optionEx);

    </script>

    <script type="text/javascript">
        var myChartType = echarts.init(document.getElementById('piechartGoodsType'));

        var optionType = {
            title: {
                text: '兑换商品类型比',
                x: 'center'
            },
            tooltip: {
                trigger: 'item',
                formatter: "{a} <br/>{b} : {c} ({d}%)"
            },
            legend: {
                show: false,
                orient: 'vertical',
                x: 'left',
                data: ['兑换商品']
            },
            toolbox: {
                show: false,
                feature: {
                    mark: { show: true },
                    dataView: { show: true, readOnly: false },
                    magicType: {
                        show: true,
                        type: ['pie', 'funnel'],
                        optionCustomerService: {
                            funnel: {
                                x: '25%',
                                width: '50%',
                                funnelAlign: 'left',
                                max: 1548
                            }
                        }
                    },
                    restore: { show: true },
                    saveAsImage: { show: true }
                }
            },
            calculable: true,
            series: [
                {
                    name: '兑换商品类型比',
                    type: 'pie',
                    radius: '55%',
                    center: ['50%', '60%'],
                    data: [
                        { value: 0, name: '客服' }
                    ]
                }
            ]
        };


        myChartType.setOption(optionType);

    </script>

    <script type="text/javascript">
        var myChartVisit = echarts.init(document.getElementById('piechartVisitRatio'));

        var optionVisit = {
            title: {
                text: '积分支出类型比',
                x: 'center'
            },
            tooltip: {
                trigger: 'item',
                formatter: "{a} <br/>{b} : {c} ({d}%)"
            },
            legend: {
                show: false,
                orient: 'vertical',
                x: 'left',
                data: ['比率']
            },
            toolbox: {
                show: false,
                feature: {
                    mark: { show: true },
                    dataView: { show: true, readOnly: false },
                    magicType: {
                        show: true,
                        type: ['pie', 'funnel'],
                        optionChannel: {
                            funnel: {
                                x: '25%',
                                width: '50%',
                                funnelAlign: 'left'
                            }
                        }
                    },
                    restore: { show: true },
                    saveAsImage: { show: true }
                }
            },
            calculable: true,
            series: [
                {
                    name: '积分支出类型比',
                    type: 'pie',
                    center: ['50%', '60%'],
                    radius: [0, 40],
                    itemStyle: {
                        normal: {
                            label: {
                                show:false,
                                position: 'inner'
                            },
                            labelLine: {
                                show: false
                            }
                        }
                    },
                    data: [
                        { value: 0, name: '渠道' }
                    ]
                },
                {
                    name: '积分支出类型比',
                    type: 'pie',
                    center: ['50%', '60%'],
                    radius: [45, 80],
                    data: [
                        { value: 0, name: '渠道' }
                    ]
                }
            ]
        };


        myChartVisit.setOption(optionVisit);

    </script>

}