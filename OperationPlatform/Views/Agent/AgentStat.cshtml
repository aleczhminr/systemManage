
@{
    ViewBag.Title = "代理商统计";
}

@section Style{
    @Styles.Render("~/style/form")
}
<div class="page-where agentStat" style=" margin-top:10px;">
    <div class="btn-group">
        <button type="button" class="btn btn-default btn-select" value="7" onclick="agentWhereTimeButtonClick(this)">最近7天</button>
        <button type="button" class="btn btn-default" value="15" onclick="agentWhereTimeButtonClick(this)">最近15天</button>
        <button type="button" class="btn btn-default" value="30" onclick="agentWhereTimeButtonClick(this)">最近30天</button>
        <button type="button" class="btn btn-default" value="90" onclick="agentWhereTimeButtonClick(this)">最近三个月</button>
        <button type="button" class="btn btn-default" value="other" onclick="agentWhereTimeButtonClick(this)">其他时间</button>
    </div>
    <div class="btn-group page-where-othertime" style="display: none;">
        <button type="button" value="return" class="btn btn-default border-right0" onclick=" agentWhereTimeButtonClick(this) ">返回</button>
        <div class="page-where-time-input">
            <div class="input-daterange input-group">
                <input type="text" placeholder="开始时间" class="input-sm form-control" name="start"/>
                <span class="input-group-addon">to</span>
                <input type="text" placeholder="结束时间" class="input-sm form-control" name="end"/>
            </div>
        </div>
        <button type="button" value="select" class="btn btn-default btn-inquire" onclick=" GetAgentStatChart() ">查询</button>
    </div>
    <div class="page-where-right">
        <div class="checkbox check-success">
            <input type="checkbox" checked="checked" value="reg" id="checkbox1">
            <label for="checkbox1">注册</label>
            <input type="checkbox" value="active" id="checkbox2">
            <label for="checkbox2">活跃</label>
            @*<input type="checkbox" value="loyal" id="checkbox3">
            <label for="checkbox3">忠诚</label>*@    
        </div>
    </div>
</div>
<div id="AgentFlashcontenttd" class="chartDiv">

</div>

@section Scripts{
    @Scripts.Render("~/js/begin/form")
    <script src="~/Scripts/plugins/asset/echarts-all.js"></script>
    @*<script src="~/Scripts/Operation/Operation.js"></script>*@
    <script src="~/Scripts/plugins/summernote/js/summernote.min.js"></script>
    <script src="~/Scripts/plugins/artTemplate/template.js"></script>
    <script type="text/javascript">
        var jsonData = null;

        $(document).ready(function() {
            $('.agentStat .page-where-othertime .input-daterange').datepicker();

            $(".agentStat .page-where-right input:checkbox").click(function() {
                GetAgentStatChart();
            });

            GetAgentStatChart();
        });

        function agentWhereTimeButtonClick(obj) {
            var value = obj.value;
            if (value == "return") {
                $(".agentStat .btn-group").show().filter(".page-where-othertime").hide();
            } else {
                $(obj).parent().find(".btn-select").removeClass("btn-select");
                $(obj).addClass("btn-select");
                if (value == "other") {
                    $(".agentStat .btn-group").hide().filter(".page-where-othertime").show();
                } else {
                    GetAgentStatChart();
                }
            }
        }

        function GetAgentStatChart() {
            var url = "/Agent/GetAgentStat";
            var postJson = {};
            //postJson["page"] = page;
            var timeType = $(".agentStat .btn-group .btn.btn-select").val();
            if (timeType == "other") {
                var statTime = $(".agentStat .page-where-othertime input[name='start']").val();
                var endTime = $(".agentStat .page-where-othertime input[name='end']").val();
                if (statTime.length > 0) {
                    postJson["stTime"] = statTime;
                }
                if (endTime.length > 0) {
                    postJson["edTime"] = endTime;
                }
            } else {
                var timeValue = $.timePeriod(0 - Number(timeType));
                postJson["stTime"] = timeValue.start.toLocaleDateString();
                postJson["edTime"] = timeValue.end.toLocaleDateString();
            }

            var columnList = $(".agentStat .checkbox input:checkbox:checked");
            var column = new Array();
            $.each(columnList, function(i, n) {
                column.push(n.value);
            });
            if (column.length > 0) {
                postJson["columns"] = column.join(",");

                $.doAjax(url, postJson, function (msg) {
                    if (msg != "null" && msg != "") {
                        var json = $.parseJSON(msg);
                        jsonData = json;

                        var XLable = new Array();
                        var tbData = {};

                        var series = new Array();

                        option.title.text = json.captionTitle;
                        $.each(json.DataList, function (i, n) {

                            XLable.push(i);

                            $.each(n.ItemList, function (itemI, itemN) {

                                var dataItemValue = {};
                                if (n.weekend == 6 || n.weekend == 0) {
                                    dataItemValue = {
                                        value: Number(itemN.Values),
                                        symbol: 'emptycircle',
                                        smooth: true,
                                        symbolSize: 2,
                                        itemStyle: {
                                            normal: {
                                                color: 'red'
                                            }
                                        },
                                        showAllSymbol: true
                                    };
                                } else {
                                    dataItemValue["value"] = Number(itemN.Values);
                                }

                                if (!tbData.hasOwnProperty(itemN.series)) {
                                    tbData[itemN.series] = new Array();
                                }
                                tbData[itemN.series].push(dataItemValue);


                            });

                        });
                        var legend = new Array();
                        $.each(tbData, function (i, n) {
                            var seriesItem = {
                                name: i,
                                type: 'line',
                                symbol: 'Circle',
                                smooth: true,
                                data: n,
                                markLine: { data: [{ type: "average", name: "平均值" }] }
                            }
                            series.push(seriesItem);
                            legend.push(seriesItem.name);
                        });

                        option.xAxis[0].data = XLable;
                        option.legend.data = legend;
                        option.series = series;
                        myChart.clear().setOption(option);
                    }

                }, true);
            }
        }


        var myChart = echarts.init(document.getElementById('AgentFlashcontenttd'));

        var option = {
            color:
            [
                '#87cefa', '#ff7f50', '#da70d6', '#32cd32', '#6495ed',
                '#ff69b4', '#ba55d3', '#cd5c5c', '#ffa500', '#40e0d0',
                '#1e90ff', '#ff6347', '#7b68ee', '#00fa9a', '#ffd700',
                '#6b8e23', '#ff00ff', '#3cb371', '#b8860b', '#30e0e0'
            ],
            title: {
                text: '代理商汇总',
                textAlign: "center",
                x: "center"
            },
            tooltip: {
                show: true,
                trigger: 'axis'
            },
            legend: {
                data: [
                    '注册用户'
                ],
                y: "bottom"
            },
            toolbox: {
                show: true,
                feature: {
                    mark: { show: true },
                    dataView: { show: true, readOnly: false },
                    magicType: { show: true, type: ['line', 'bar'] },
                    restore: { show: true },
                    saveAsImage: { show: true }
                }
            },
            dataZoom: { show: true, realtime: true, y: 36, height: 20, start: 0, end: 100 },
            calculable: false,
            grid: { y: 60, y2: 70, x2: 20 },
            xAxis: [
                {
                    type: 'category',
                    boundaryGap: false,
                    axisLine: { show: true }, //坐标轴线
                    axisTick: { show: true }, //坐标轴小标记
                    axisLabel: { show: true }, //坐标轴文本标签
                    splitArea: { show: false }, //分隔区域
                    splitLine: { show: true }, //分隔线
                    data: ['0', '0', '0', '0', '0', '0', '0']
                }
            ],
            yAxis: [
                {
                    type: 'value'
                }
            ],
            axis: { scale: true },
            series: [
                {
                    name: '注册用户',
                    type: 'line',
                    symbol: 'Circle',
                    data: [0, 0, 0, 0, 0, 0, 0]
                }
            ]
        };


        // 为echarts对象加载数据
        myChart.setOption(option);
    </script>
}






